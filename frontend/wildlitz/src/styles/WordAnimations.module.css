/* WordAnimations.css */
/* Styling for word animations component */

.word-animation {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 2rem 0;
  }
  
  .word-animation-container {
    position: relative;
    width: 100%;
    height: 150px;
    background-color: #f8f9fa;
    border-radius: 15px;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .syllable-animation {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }
  
  .syllable-visual {
    font-size: 2rem;
    font-weight: bold;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    color: #495057;
    transition: all 0.3s ease;
    background-color: #e9ecef;
  }
  
  .syllable-visual.active {
    background-color: #4dabf7;
    color: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  /* Animation for specific words could be added here */
  /* For example: */
  
  /* Cat animation */
  .cat-animation {
    background-image: url('/images/cat.svg');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
  }
  
  /* Dog animation */
  .dog-animation {
    background-image: url('/images/dog.svg');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
  }
  
  /* For more complex animations, we could include specific CSS for each word */
  /* These could include character movements, objects, etc. */
  
  /* Responsive adjustments */
  @media (max-width: 600px) {
    .word-animation-container {
      height: 120px;
    }
    
    .syllable-visual {
      font-size: 1.5rem;
      padding: 0.3rem 0.7rem;
    }
  }
  
  /* Animation keyframes for reuse */
  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-15px); }
  }
  
  @keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
  }
  
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }